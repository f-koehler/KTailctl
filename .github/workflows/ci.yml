name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ${{ matrix.toolchain.os }}
    strategy:
      matrix:
        toolchain:
          - name: "Ubuntu 22.04 (GCC 10)"
            os: ubuntu-22.04
            cc: gcc-10
            cxx: g++-10
            packages: "gcc-10 g++-10"
          - name: "Ubuntu 22.04 (GCC 11)"
            os: ubuntu-22.04
            cc: gcc-11
            cxx: g++-11
            packages: "gcc-11 g++-11"
          - name: "Ubuntu 22.04 (GCC 12)"
            os: ubuntu-22.04
            cc: gcc-12
            cxx: g++-12
            packages: "gcc-12 g++-12"
          - name: "Ubuntu 22.04 (Clang 11)"
            os: ubuntu-22.04
            cc: clang-11
            cxx: clang++-11
            packages: "clang-11"
          - name: "Ubuntu 22.04 (Clang 12)"
            os: ubuntu-22.04
            cc: clang-12
            cxx: clang++-12
            packages: "clang-12"
          - name: "Ubuntu 22.04 (Clang 13)"
            os: ubuntu-22.04
            cc: clang-13
            cxx: clang++-13
            packages: "clang-13"
          - name: "Ubuntu 22.04 (Clang 14)"
            os: ubuntu-22.04
            cc: clang-14
            cxx: clang++-14
            packages: "clang-14"
    steps:
      - name: Checkout repository.
        uses: actions/checkout@v3
      - name: Update apt cache.
        run: sudo apt-get update -yq
      - name: Update apt packages.
        run: sudo apt-get upgrade -yq
      - name: Install compiler and CMake.
        run: sudo apt-get install -yq ${{ matrix.toolchain.packages }} cmake
      - name: Install Qt dependencies.
        run: sudo apt-get install -yq qtbase5-dev qtdeclarative5-dev qtquickcontrols2-5-dev libqt5svg5-dev
      - name: Install KDE dependencies.
        run: sudo apt-get install -yq appstream extra-cmake-modules kirigami2-dev libkf5coreaddons-dev libkf5i18n-dev libkf5config-dev libkf5notifications-dev
      - name: Setup go.
        uses: actions/setup-go@v4
        with:
          go-version: "stable"
          check-latest: true
      - name: Print go version.
        run: go version
      - name: Cache build directory.
        uses: actions/cache@v3
        with:
          path: build
          key: ${{ matrix.toolchain.os }}-${{ matrix.toolchain.cc }}-${{ matrix.toolchain.cxx }}
      - name: Configure CMake project.
        run: CC=${{ matrix.toolchain.cc }} CXX=${{ matrix.toolchain.cxx }} cmake -B build
      - name: Build CMake project.
        run: cmake --build build
