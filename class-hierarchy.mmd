classDiagram
    Account <|-- NetbirdAccount
    Account <|-- TailscaleAccount
    AccountModel~Account~ <|-- NetbirdAccountModel
    AccountModel~Account~ <|-- TailscaleAccountModel
    NetbirdAccount "1" o--o "0..1" NetbirdNetwork
    NetbirdAccountModel o-- NetbirdAccount
    NetbirdNetwork *-- NetbirdNetworkNode
    NetbirdNetworkNode *-- NetbirdNodeProperties
    NetbirdNodeModel o-- NetbirdNetwork
    NetworkNode~Properties~ <|-- NetbirdNetworkNode
    NetworkNode~Properties~ <|-- TailscaleNetworkNode
    NodeProperties <|-- NetbirdNodeProperties
    NodeProperties <|-- TailscaleNodeProperties
    QAbstractListModel <|-- AccountModel~Account~
    QAbstractListModel <|-- NodeModel~Node~
    QAbstractListModel <|-- TailscaleMullvadCountryModel
    QObject <|-- Account
    QObject <|-- MeshState
    QObject <|-- NetworkNode~Properties~
    QObject <|-- Network~Node~
    QObject <|-- NodeProperties
    QObject <|-- QAbstractListModel
    QObject <|-- QSortFilterProxyModel
    QObject <|-- TailscaleAccountsClient
    QObject <|-- TailscaleClient
    QObject <|-- TailscaleNetworkClient
    QObject <|-- TailscaleSettingsClient
    QSortFilterProxyModel <|-- TailscaleExitNodeModel
    QSortFilterProxyModel <|-- TailscaleMullvadExitNodeModel
    TailscaleAccount o--o TailscaleNetwork
    TailscaleAccountModel o-- TailscaleAccount
    TailscaleClient *-- TailscaleAccountsClient
    TailscaleClient *-- TailscaleNetworkClient
    TailscaleClient *-- TailscaleSettingsClient
    TailscaleExitNodeModel o-- TailscaleNodeModel
    TailscaleMullvadExitNodeModel o-- TailscaleExitNodeModel
    TailscaleNetwork *-- TailscaleNetworkNode
    TailscaleNetworkNode *-- TailscaleNodeProperties
    TailscaleNodeModel o-- TailscaleNetwork
    

    namespace Qt {
        class QObject {
        }
        class QAbstractListModel {
            <<abstract>>
        }
        class QSortFilterProxyModel {
        }
    }
    
    MeshState *-- "0..*" NetbirdAccount
    MeshState *-- "0..*" NetbirdNetwork
    MeshState *-- "0..*" TailscaleAccount
    MeshState *-- "0..1" TailscaleNetwork
    MeshState *-- "0..1" TailscaleUpdater
    class MeshState {
        -QVector~QPointer TailscaleAccount~ tailscaleAccounts
        -QPointer~TailscaleNetwork~ tailscaleNetwork
        -QPointer~TailscaleUpdater~
        -QVector~QPointer NetbirdAccount~ netbirdAccounts
        -QVector~QPointer NetbirdNetwork~ netbirdNetworks
        +getTailscaleAccounts() QVector~QPointer TailscaleAccount~
        +getNetbirdAccounts() QVector~QPointer NetbirdAccount~
        +getTailscaleNetwork() TailscaleNetwork&ast;
        +getNetbirdNetworks() QVector~QPointer NetbirdNetwork~
    }
    
    QObject <|-- TailscaleUpdater
    TailscaleUpdater -- TailscaleNetwork
    TailscaleUpdater -- TailscaleNodeProperties
    TailscaleUpdater -- Location
    TailscaleUpdater -- TailscaleAccount
    TailscaleUpdater -- PBTailscaleStatus
    TailscaleUpdater -- PBTailscalePeer
    TailscaleUpdater -- PBTailscaleLocation
    TailscaleUpdater -- PBTailscaleAccounts
    class TailscaleUpdater {
        <<interface>>
        -QPointer~QTimer~ updateTimer
        +update(PBTailscaleAccount account, TailscaleAccount acc)
        +update(PBTailscaleStatus status, TailscaleNetwork network)
        +update(PBTailscalePeer peer, TailscaleNodeProperties properties)
        +update(PBTailscaleLocation location, Location loc)
    }
    
    QObject <|-- Location
    TailscaleNodeProperties "1" *-- "1" Location
    namespace Nodes {
        class Location {
            +**property** countryCode
            +**property** countryName
            +**property** cityCode
            +**property** cityName
            +**property** longitude
            +**property** latitude
            -QString mCountryCode
            -QString mCountryName
            -QString mCityCode
            -QString mCityName
            -double mLongitude
            -double mLatitude
            +Location(QObject* parent)
            +getCountryCode() const QString&
            +getCountryName() const QString&
            +getCityCode() const QString&
            +getCityName() const QString&
            +getLongitude() double
            +getLatitutde() double
            +**signal** countryCodeChanged(const QString&)
            +**signal** countryChanged(const QString&)
            +**signal** cityCodeChanged(const QString&)
            +**signal** cityNameChanged(const QString&)
            +**signal** longitudeChanged(double)
            +**signal** latitudeChanged(double)
        }
        class NodeProperties {
            +**property** id
            +**property** name
            +**property** publicKey
            +**property** ipAddresses
            -const QString mId
            -QString mName
            -QString mPublicKey
            -QStringList mIpAddresses
            +NodeProperties(const QString& id, QObject&ast; parent)
            +NodeProperties(QString&& id, QObject&ast; parent)
            +getId() const QString&
            +getName() const QString&
            +getPublicKey() const QString&
            +getIpAddresses() const QStringList&
            +**signal** nameChanged(const QString&)
            +**signal** publicKeyChanged(const QString&)
            +**signal** ipAddressesChanged(const QStringList&)
        }
        class TailscaleNodeProperties {
            +**property** tags
            +**property** isExitNode
            +**property** operatingSystem
            +**property** lastSeenTime
            +**property** creationTime
            -QStringList mTags
            -bool mIsExitNode
            -QString mDnsName
            -QString mOperatingSystem
            -QDateTime mLastSeenTime
            -QDateTime mCreationTime
            -QPointer~Location~ mLocation
            +TailscaleNodeProperties(const QString& id, QObject&ast; parent)
            +TailscaleNodeProperties(QString&& id, QObject&ast; parent)
            +getTags() QStringList
            +isExitNode() bool
            +getDnsName() const QString&
            +getOperatingSystem() const QString&
            +getLastSeenTime() const QDateTime&
            +getCreationTime() const QDateTime&
            +getLocation() const Location&
            +**signal** tagsChanged(const QStringList&)
            +**signal** isExitNodeChanged(bool)
            +**signal** operatingSystemChanged(const QString&)
            +**signal** lastSeenTimeChanged(const QDateTime&)
            +**signal** creationTimeChanged(const QDateTime&)
        }
        class NetbirdNodeProperties~Properties~ {
        }
        class NetworkNode {
            <<abstract>>
            +**property** properties
            +NetworkNode(QObject* parent)
            +getProperties() Properties&ast;
        }
        class TailscaleNetworkNode {
            +**property** properties
            -QPointer~TailscaleNodeProperties~ mProperties
            +TailscaleNetworNode(const QString& id, QObject* parent)
            +TailscaleNetworNode(QString&& id, QObject* parent)
            +getProperties() Properties&ast;
        }
        class NetbirdNetworkNode {
            +**property** properties
            -QPointer~NetbirdNodeProperties~ mProperties
            +getProperties() Properties&ast;
        }
    }

    Network~Node~ <|-- NetbirdNetwork
    Network~Node~ <|-- TailscaleNetwork
    namespace Networks {
        class Network~Node~  {
            <<abstract>>
            +**property** nodes
            +Network~Node~(QObject* parent)
            +getNodes() QHash~QString,QPointer Node~&
            +**signal** nodesAdded(const QStringList)
            +**signal** nodesRemoved(const QStringList)
        }
        class TailscaleNetwork {
            +**property** nodes
            +TailscaleNetwork(QObject* parent)
            -mNodes: QHash~QString,QPointer TailscaleNetworkNode~
            +getNodes() QHash~QString,QPointer Node~&
        }
        class NetbirdNetwork {
            +**property** nodes
            -mNodes: QHash~QString,QPointer NetbirdNetworkNode~
            +getNodes() QHash~QString,QPointer Node~&
        }
    }

    namespace Accounts {
        class Account {
            <<abstract>>
            -name: QString
            +getName() const QString&
        }
        class TailscaleAccount {
        }
        class NetbirdAccount {
        }
    }
        
    namespace LocalClients {
        class TailscaleClient {
            -QPointer<TailscaleNetworkClient> networkClient
            -QPointer<TailscaleAccountsClient> accountsClient
            -QPointer<TailscaleSettingsClient> settingsClient
            +getNetworkClient() TailscaleNetworkClient&ast;
            +getAccountsClient() TailscaleAccountsClient&ast;
            +getSettingsClient() TailscaleSettingsClient&ast;
        }
        class TailscaleNetworkClient {
            +up()
            +down()
        }
        class TailscaleAccountsClient {
            +list()
            +switch()
        }
        class TailscaleSettingsClient {
            +isAcceptingRoutes() bool
            +setAcceptingRoutes(bool value) bool
            +isAcceptingExitNode() bool
            +setAdvertisingExitNode(bool value) bool
            +getHostname() QString
            +setHostname(name)
        }
    }

    NodeModel~Node~ <|-- NetbirdNodeModel
    NodeModel~Node~ <|-- TailscaleNodeModel
    TailscaleNodeModel "1" -- "1" TailscaleNetwork
    TailscaleNodeModel "1" -- "1..*" TailscaleNodeProperties
    namespace Models {
        class NodeModel~Node~ {
            <<abstract>>
        }
        class TailscaleNodeModel {
        }
        class NetbirdNodeModel {
        }
        class TailscaleExitNodeModel {
        }
        class TailscaleMullvadExitNodeModel {
        }
        class AccountModel~Account~ {
            <<abstract>>
        }
        class TailscaleAccountModel {
        }
        class NetbirdAccountModel {
        }
        class TailscaleMullvadCountryModel {
        }
    }
    
    PBTailscaleStatus "1" *-- "1" PBTailscalePeer
    PBTailscaleStatus "1" *-- "0..*" PBTailscalePeer
    PBTailscaleStatus "1" *-- "1" PBTailscaleState
    PBTailscalePeer "1" *-- "0..1" PBTailscaleLocation
    PBTailscaleAccounts "1" *-- "0..*" PBTailscaleAccount
    namespace Protobuf {
        class PBTailscaleStatus {
            PBTailscaleState state
            PBTailscalePeer self
            repeated PBTailscalePeer peers
            repeated string health
        }
        class PBTailscalePeer {
            +string id
            +string publicKey
            +string hostName
            +string dnsName
            +string operatingSystem
            +repeated string ipAddresses
            +repeated string tags
            +Timestamp lastSeenTime
            +Timestamp createdTime
            +bool exitNode
            +optional PBTailscaleLocation location
        }
        class PBTailscaleLocation {
            +string country
            +string countryCode
            +string city
            +string cityCode
            +double longitude
            +double latitude
        }
        class PBTailscaleState {
            +string version
            +string backendState
            +bool tun
        }
        class PBTailscaleAccounts {
            +repeated PBTailscaleAccount
        }
        class PBTailscaleAccount {
        }
    }